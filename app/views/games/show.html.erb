<!DOCTYPE html>
<html>
<head>
  <title>Jeu de Yams</title>
  <%= csrf_meta_tags %>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
  ></script>
  <style>
    body {
      background-image: url('<%= asset_path("background.jpg") %>');
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      background-attachment: fixed;
    }
    .centered-content {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      background-color: rgba(255, 255, 255, 0.9); /* Couche blanche transparente */
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }
    .die {
      width: 100px;
    }
  </style>
</head>
<body>
  <div class="container centered-content">
    <!-- Header -->
    <header class="text-center mb-5">
      <h1 class="display-4 text-primary">Jeu de Yams ðŸŽ²</h1>
      <h2 class="text-secondary">
        Joueur actuel : <span id="current-player" class="fw-bold"><%= @players[@current_player_index].name %></span>
      </h2>
      <p class="text-muted">
        Lancers restants : <span id="roll-count" class="fw-bold"><%= 3 - @roll_count %></span>
      </p>
    </header>

    <!-- Dice Container -->
    <div id="dice-container" class="d-flex justify-content-center flex-wrap mb-4">
      <% @dice.each_with_index do |die, index| %>
        <div class="die m-2 text-center border rounded p-3 shadow-sm">
          <p class="fs-3"><%= die %></p>
          <label>
            <input type="checkbox" class="keep-die" data-index="<%= index %>">
            Garder
          </label>
        </div>
      <% end %>
    </div>

    <!-- Buttons -->
    <div id="button-container" class="text-center">
      <button id="roll-dice" class="btn btn-primary btn-lg me-3">Lancer les dÃ©s</button>
      <button id="next-player" class="btn btn-success btn-lg" disabled>Joueur suivant</button>
    </div>

    <!-- Back to Home -->
    <div class="text-center mt-4">
      <%= link_to "Retour Ã  l'accueil", root_path, class: "btn btn-link" %>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const rollDiceButton = document.getElementById("roll-dice");
      const nextPlayerButton = document.getElementById("next-player");
      const diceContainer = document.getElementById("dice-container");
      const currentPlayer = document.getElementById("current-player");
      const rollCount = document.getElementById("roll-count");

      rollDiceButton.addEventListener("click", () => {
        console.log("Bouton 'Lancer les dÃ©s' cliquÃ©.");

        const keptDiceIndices = Array.from(document.querySelectorAll(".keep-die:checked"))
          .map(checkbox => parseInt(checkbox.dataset.index));

        fetch("<%= roll_dice_game_path(@game.id) %>", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": document.querySelector("[name='csrf-token']").content
          },
          body: JSON.stringify({ kept_dice: keptDiceIndices })
        })
          .then(response => {
            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
          })
          .then(data => {
            console.log("DonnÃ©es JSON reÃ§ues :", data);

            // Mise Ã  jour des dÃ©s
            diceContainer.innerHTML = "";
            data.dice.forEach((value, index) => {
              const dieDiv = document.createElement("div");
              dieDiv.classList.add("die", "m-2", "text-center", "border", "rounded", "p-3", "shadow-sm");
              dieDiv.innerHTML = `<p class="fs-3">${value}</p>
                <label>
                  <input type="checkbox" class="keep-die" data-index="${index}" ${
                    data.kept_dice.includes(index) ? "checked" : ""
                  }> Garder
                </label>`;
              diceContainer.appendChild(dieDiv);
            });

            // Mise Ã  jour du compteur de lancers
            rollCount.textContent = 3 - data.roll_count;

            // Gestion des boutons
            if (data.roll_count === 0) {
              console.log("Activation du bouton 'Joueur suivant'.");
              rollDiceButton.disabled = true;
              nextPlayerButton.disabled = false;
            } else {
              rollDiceButton.disabled = false;
              nextPlayerButton.disabled = true;
            }
          })
          .catch(error => {
            console.error("Erreur lors de la requÃªte :", error);
            alert("Une erreur s'est produite lors du lancement des dÃ©s. Veuillez rÃ©essayer.");
          });
      });

nextPlayerButton.addEventListener("click", () => {
  console.log("Bouton 'Joueur suivant' cliquÃ©.");

  fetch("<%= next_player_game_path(@game.id) %>", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "X-CSRF-Token": document.querySelector("[name='csrf-token']").content
    },
  })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log("Changement de joueur :", data.current_player_name);

      // Met Ã  jour le nom du joueur actuel
      currentPlayer.textContent = data.current_player_name;

      // RÃ©initialise les boutons et compteurs
      rollDiceButton.disabled = false;
      nextPlayerButton.disabled = true;
      rollCount.textContent = 3;
    })
    .catch(error => {
      console.error("Erreur lors de la requÃªte :", error);
      alert("Une erreur s'est produite lors du changement de joueur.");
    });
});

});
  </script>
</body>
</html>
